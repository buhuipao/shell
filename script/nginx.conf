#Main层级
user nginx nginx;
# set as your cpu kernel number
worker_processes auto;
error_log /var/log/nginx/error.log notice;
#error_log /var/log/nginx/error.log info;
pid /run/nginx.pid;
worker_rlimit_nofile 65535  #绑定worker进程和CPU

#Envents层级
events {
    use epoll;      #epoll和kqueue为nginx的高效模式，select和poll为标准模式
    worker_connections 10240;

}

http {
    #日志格式，便于分析是当更改,main为其名字
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;        #开启高效文件传输模式
    tcp_nopush          on;        #防止网络阻塞
    tcp_nodelay         on;
    keepalive_timeout   65;
    client_header_timeout  10;     #客户端请求头部读取时间
    client_body_timeout    10;     #客户端请求主体读取时间
    send_timeout        10;        #指定客户端的超时时间，这个超时仅限于两个连接活动之间的时间，超过这个时间，客户端没活动                                   #将会关闭连接
    types_hash_max_size 2048;
    
    #Gzip setting
    gzip                on;
    gzip_min_length     1K;        #设定最小压缩大小，小于1k可能会压缩变大
    gzip_buffers        4  16k;    #申请四个单位为16k的内存作为压缩结果流缓存，默认是申请元是数据大小的内存来储存压缩结果
    gzip_comp_level     7;         #压缩比
    gzip_types          text/plain application/x-javascript text/css application/xml; #压缩类型

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;       #HTTP核心模块命令，默认为二进制流

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  buhuipao.com 139.129.38.208;
        root         /usr/share/nginx/html;
        index   index.html index.htm index.php;
        charset     utf-8;
        access_log  /var/log/nginx/host.access.log  main;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        #location / {
        #    ModSecurityEnabled on;
        #    ModSecurityConfig modsecurity.conf;
        }

        # redirect server error pages to the static page /40x.html
        error_page 404 /404.html;
            location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        localtion ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$  {
        root    /var/www/html/buhuipao.com;
        expires     30d;        #静态文件的过期时间
        }

        #301
        server      {
             listen 80;
             server_name buhuipao.com;
             rewrite ^/(.*)$ http://www.buhuipao.com/$1 permanent;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root concurs with nginx's one
        location ~ /\.ht {
            deny  all;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    server {
        listen       80;
        server_name  blog.buhuipao.com;

        location / {
            root   /var/www/html/blog;
            index  index.html index.htm index.php;
        }

        include /etc/nginx/default.d/*.conf;
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl;
#        listen       [::]:443 ssl;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

